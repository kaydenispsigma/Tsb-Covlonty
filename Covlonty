game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "Covlonty Character",
    Text = "Hello! My name's Ughuhh09... On Roblox. This script might not work, but that's not my fault! Thank you for cooperating. (Made By Ughuhh09{Kayden})",
    Duration = 3,
    Button1 = "Honestly... I couldn't give a fuck",
    Button2 = "Eugh... THIS GUY STINKSðŸ¦¨"
})

-- Player & character setup
local player = game.Players.LocalPlayer
local backpack = player:FindFirstChildOfClass("Backpack") or player:WaitForChild("Backpack")
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")
local camera = game.Workspace.CurrentCamera

for _, obj in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
    if obj:IsA("Tool") then
        obj:Destroy()
    end
end

-- Variables
local Invisible = false
local speedBoost = 50
local originalWalkSpeed = humanoid.WalkSpeed  -- Store the original walk speed
local undergroundOffset = Vector3.new(0, -5, 0)  -- The offset to push the player underground

-- Function to toggle invisibility
local function toggleInvisibility()
    if Invisible then
        -- Turn off invisibility
        Invisible = false
        humanoid.WalkSpeed = originalWalkSpeed  -- Reset speed
        -- Make the player visible again
        character:WaitForChild("Head").Transparency = 0  -- Set head transparency to 0 (visible)
        for _, part in pairs(character:GetChildren()) do
            if part:IsA("BasePart") and part.Name ~= "Head" then
                part.Transparency = 0  -- Set body part transparency to 0 (visible)
            end
        end
        -- Move player back to the original position (above ground)
        humanoidRootPart.CFrame = humanoidRootPart.CFrame + Vector3.new(0, 5, 0)
        print("You are now visible again.") -- Debugging
    else
        -- Activate invisibility
        Invisible = true
        humanoid.WalkSpeed = speedBoost  -- Apply speed boost

        -- Make the player invisible
        character:WaitForChild("Head").Transparency = 1  -- Set head transparency to 1 (invisible)
        for _, part in pairs(character:GetChildren()) do
            if part:IsA("BasePart") and part.Name ~= "Head" then
                part.Transparency = 1  -- Set body part transparency to 1 (invisible)
            end
        end
        -- Move the player underground with the offset
        humanoidRootPart.CFrame = humanoidRootPart.CFrame + undergroundOffset
        print("You are now invisible and underground.") -- Debugging
    end
end

-- Create Invisibility Tool
local invisibilityTool = Instance.new("Tool")
invisibilityTool.Name = "Phantom Shift"
invisibilityTool.RequiresHandle = false
invisibilityTool.Parent = backpack
invisibilityTool.Activated:Connect(toggleInvisibility)

print("Phantom Shift Tool Created") -- Debugging

-- Create Mapo Tel Tool (Teleport Ability)
local mapotel = Instance.new("Tool")
mapotel.Name = "Mapo Tel"
mapotel.RequiresHandle = false
mapotel.Parent = backpack  

print("Mapo Tel Tool Created") -- Debugging

local function mapoTel()
    local moveDirection = humanoid.MoveDirection
    local teleportDistance = 15  

    if moveDirection.Magnitude > 0 then
        humanoidRootPart.CFrame = humanoidRootPart.CFrame + moveDirection.Unit * teleportDistance
    else
        local closestPlayer, closestDistance = nil, math.huge
        for _, otherPlayer in ipairs(game.Players:GetPlayers()) do
            if otherPlayer ~= player and otherPlayer.Character then
                local otherHRP = otherPlayer.Character:FindFirstChild("HumanoidRootPart")
                if otherHRP then
                    local distance = (humanoidRootPart.Position - otherHRP.Position).Magnitude
                    if distance < closestDistance then
                        closestDistance, closestPlayer = distance, otherPlayer
                    end
                end
            end
        end

        if closestPlayer then
            humanoidRootPart.CFrame = closestPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0, 5, 0)
        end
    end
end

mapotel.Activated:Connect(mapoTel)

-- Create Tasn Tool (Teleport to Random Trashcan Ability)
local tasnTool = Instance.new("Tool")
tasnTool.Name = "Tasn"
tasnTool.RequiresHandle = false  
tasnTool.Parent = backpack  

print("Tasn Tool Created") -- Debugging

-- Predefined trashcan positions
local trashcanPositions = {
    Vector3.new(4.62967586517334, 440.5057373046875, 60.54078674316406),
    Vector3.new(69.82223510742188, 440.5058288574219, -78.09501647949219),
    Vector3.new(124.11994171142578, 440.50567626953125, -100.90341186523438),
    Vector3.new(178.38943481445312, 440.5058288574219, 157.46755981445312)
}

local function tasnAbility()
    local originalPosition = humanoidRootPart.Position
    local randomPosition = trashcanPositions[math.random(1, #trashcanPositions)]

    -- Teleport to trashcan
    humanoidRootPart.CFrame = CFrame.new(randomPosition)

game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "M1",
    Text = "PUNCH NOW LEFT CLICK NOW",
    Duration = 1
})

    task.wait(2) -- Stay at trashcan for 1 second

    -- Teleport back
    humanoidRootPart.CFrame = CFrame.new(originalPosition)
end

tasnTool.Activated:Connect(tasnAbility)

-- Function to update the camera to always follow the player even when invisible
game:GetService("RunService").RenderStepped:Connect(function()
    -- Ensure the camera follows the character even while invisible
    camera.CameraSubject = humanoid
end)

print("Script Loaded Successfully!") -- Debugging
