game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "Covlonty Character",
    Text = "Hello! My name's Ughuhh09... On Roblox, but if this script doesn't work, that's not my fault! Thank you for cooperating. (Made by Ughuhh09 {Kayden})",
    Duration = 3,
    Button1 = "Okay, I don't give a fuck",
    Button2 = "Eugh... THIS GUY STINKS ðŸ¦¨",
})

-- Remove existing tools from the player's backpack
task.wait(1)
for _, obj in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
    if obj:IsA("Tool") then
        obj:Destroy()
    end
end

-- Create Mapo Tel Tool
local tool = Instance.new("Tool")
tool.Name = "Mapo Tel"
tool.RequiresHandle = false
tool.Parent = game.Players.LocalPlayer.Backpack
tool.TextureId = "rbxassetid://101984471215603"  -- Tool icon using the decal ID

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

-- Create Afterimage Effect
local function createAfterimage(position)
    local afterimage = Instance.new("Part")
    afterimage.Size = Vector3.new(2, 3, 2)
    afterimage.Material = Enum.Material.Neon
    afterimage.Color = Color3.fromRGB(255, 255, 255)
    afterimage.Position = position
    afterimage.Anchored = true
    afterimage.CanCollide = false
    afterimage.Transparency = 0.3
    afterimage.Parent = workspace

    game:GetService("TweenService"):Create(afterimage, TweenInfo.new(0.4), {Transparency = 1}):Play()
    game:GetService("Debris"):AddItem(afterimage, 0.4)
end

-- Create Teleport Particle Effect
local function createTeleportParticles(position)
    local attachment = Instance.new("Attachment")
    attachment.Parent = humanoidRootPart
    local particles = Instance.new("ParticleEmitter")
    particles.Texture = "rbxassetid://101984471215603"  -- Particle texture using the same decal ID
    particles.Rate = 50
    particles.Lifetime = NumberRange.new(0.3)
    particles.Speed = NumberRange.new(5, 10)
    particles.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(1, 0)})
    particles.Parent = attachment

    game:GetService("Debris"):AddItem(attachment, 0.5)
end

-- Play Teleport Sound
local function playTeleportSound()
    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://619406046"
    sound.Volume = 2
    sound.Parent = humanoidRootPart
    sound:Play()
    game:GetService("Debris"):AddItem(sound, 1)
end

-- Function to Perform Teleportation (Mapo Tel)
local function mapoTel()
    local moveDirection = humanoid.MoveDirection
    local teleportDistance = 15  -- Set the teleport distance to 15 studs

    -- If the player is moving, teleport in the direction they're moving
    if moveDirection.Magnitude > 0 then
        humanoidRootPart.CFrame = CFrame.new(humanoidRootPart.Position + moveDirection.Unit * teleportDistance)
    else
        -- If the player isn't moving, teleport to the closest player
        local closestPlayer = nil
        local closestDistance = math.huge

        for _, otherPlayer in pairs(game.Players:GetPlayers()) do
            if otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
                local distance = (humanoidRootPart.Position - otherPlayer.Character.HumanoidRootPart.Position).Magnitude
                if distance < closestDistance then
                    closestDistance = distance
                    closestPlayer = otherPlayer
                end
            end
        end

        -- Teleport to the closest player if found
        if closestPlayer then
            humanoidRootPart.CFrame = CFrame.new(closestPlayer.Character.HumanoidRootPart.Position + Vector3.new(0, 5, 0))
        end
    end

    -- Create effects and sound
    createAfterimage(humanoidRootPart.Position)
    createTeleportParticles(humanoidRootPart.Position)
    playTeleportSound()
end

tool.Activated:Connect(mapoTel)

-- Tasn Ability (Teleport to Random Trashcan, Left Mouse Click, and Return)
local function tasn()
    -- Store the original position before teleporting
    local originalPosition = humanoidRootPart.Position

    -- Find a random trashcan in the workspace
    local trashcans = {}
    for _, obj in pairs(workspace:GetChildren()) do
        if obj:IsA("Model") and obj.Name == "Trashcan" then  -- Ensure the model is named "Trashcan"
            table.insert(trashcans, obj)
        end
    end

    -- If there are trashcans, teleport to one and interact with it
    if #trashcans > 0 then
        local randomTrashcan = trashcans[math.random(1, #trashcans)]  -- Pick a random trashcan
        local trashcanPosition = randomTrashcan.PrimaryPart.Position

        -- Save the current camera position before teleporting (to keep it in place)
        local camera = game.Workspace.CurrentCamera
        local cameraCFrame = camera.CFrame

        -- Teleport to the trashcan
        humanoidRootPart.CFrame = CFrame.new(trashcanPosition)

        -- Simulate Left Mouse Click (M1) on the trashcan
        local mouse = game.Players.LocalPlayer:GetMouse()
        mouse.Button1Down:Fire()

        -- Wait for a moment to simulate the "pick up" action
        task.wait(1)

        -- Teleport back to the original position
        humanoidRootPart.CFrame = CFrame.new(originalPosition)

        -- Restore camera position
        camera.CFrame = cameraCFrame

        -- Play interaction effects
        createAfterimage(humanoidRootPart.Position)
        createTeleportParticles(humanoidRootPart.Position)
        playTeleportSound()
    else
        -- If no trashcans were found, notify the player
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "No Trashcans Found",
            Text = "No trashcans were found to interact with.",
            Duration = 3,
            Button1 = "Okay",
        })
    end
end

tool.Activated:Connect(tasn)
